name: Supabase Migration (Phased)

on:
  push:
    branches: [ main ]
    paths:
      - 'supabase/migrations/**'
      - 'supabase/config.toml'
      - '.github/workflows/supabase-migration-phased.yml'
  workflow_dispatch:
    inputs:
      phase:
        description: "Which phase to run"
        required: true
        default: all
        type: choice
        options:
          - all
          - tables
          - foreign_keys
          - indexes
          - views_functions
          - triggers_policies

concurrency:
  group: supabase-migrations-${{ github.ref }}
  cancel-in-progress: true

env:
  # Quiet noisy protocol logs
  DEBUG: ""
  SUPABASE_DB_DEBUG: "0"
  SUPABASE_LOG_LEVEL: "warn"
  # Fail fast on long locks
  PGOPTIONS: -c lock_timeout=5s -c statement_timeout=20min -c idle_in_transaction_session_timeout=1min

jobs:
  phase_tables:
    name: 01 Tables
    if: github.event_name == 'push' || inputs.phase == 'all' || inputs.phase == 'tables'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - name: Verify secrets
        run: |
          [ -n "${SUPABASE_ACCESS_TOKEN:-}" ] || { echo "❌ SUPABASE_ACCESS_TOKEN missing"; exit 1; }
          [ -n "${SUPABASE_PROJECT_ID:-}" ]   || { echo "❌ SUPABASE_PROJECT_ID missing"; exit 1; }
      - name: Filter migrations to 01_* (tables)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p /tmp/all /tmp/phase
          shopt -s nullglob
          mv supabase/migrations/*.sql /tmp/all/ || true
          cp /tmp/all/*-01_*.sql supabase/migrations/ || true
          echo "Files to apply:"
          ls -1 supabase/migrations || true
      - name: Link project
        run: supabase link --project-ref "$SUPABASE_PROJECT_ID"
      - name: Apply 01 migrations
        shell: bash
        run: |
          set -euo pipefail
          supabase db push --project-ref "$SUPABASE_PROJECT_ID" > push-01.log 2>&1 || {
            echo "❌ 01 failed. Last 200 lines:"; tail -n 200 push-01.log || true; exit 1; }
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: logs-01-tables
          path: push-01.log

  phase_fks:
    name: 02 Foreign Keys
    needs: [phase_tables]
    if: (github.event_name == 'push' && needs.phase_tables.result == 'success') || inputs.phase == 'all' || inputs.phase == 'foreign_keys'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - name: Filter migrations to 02_* (FKs)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p /tmp/all
          shopt -s nullglob
          mv supabase/migrations/*.sql /tmp/all/ || true
          cp /tmp/all/*-02_*.sql supabase/migrations/ || true
          echo "Files to apply:"; ls -1 supabase/migrations || true
      - name: Link project
        run: supabase link --project-ref "$SUPABASE_PROJECT_ID"
      - name: Apply 02 migrations
        shell: bash
        run: |
          set -euo pipefail
          supabase db push --project-ref "$SUPABASE_PROJECT_ID" > push-02.log 2>&1 || {
            echo "❌ 02 failed. Last 200 lines:"; tail -n 200 push-02.log || true; exit 1; }
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: logs-02-fks
          path: push-02.log

  phase_indexes:
    name: 03 Indexes
    needs: [phase_fks]
    if: (github.event_name == 'push' && needs.phase_fks.result == 'success') || inputs.phase == 'all' || inputs.phase == 'indexes'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - name: Filter migrations to 03_* (indexes)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p /tmp/all
          shopt -s nullglob
          mv supabase/migrations/*.sql /tmp/all/ || true
          cp /tmp/all/*-03_*.sql supabase/migrations/ || true
          echo "Files to apply:"; ls -1 supabase/migrations || true
      - name: Link project
        run: supabase link --project-ref "$SUPABASE_PROJECT_ID"
      - name: Apply 03 migrations
        shell: bash
        run: |
          set -euo pipefail
          # If you use CREATE INDEX CONCURRENTLY and the CLI errors about transactions,
          # keep those statements in a dedicated 03 file and consider supabase db execute instead.
          supabase db push --project-ref "$SUPABASE_PROJECT_ID" > push-03.log 2>&1 || {
            echo "❌ 03 failed. Last 200 lines:"; tail -n 200 push-03.log || true; exit 1; }
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: logs-03-indexes
          path: push-03.log

  phase_views_functions:
    name: 04 Views & Functions
    needs: [phase_indexes]
    if: (github.event_name == 'push' && needs.phase_indexes.result == 'success') || inputs.phase == 'all' || inputs.phase == 'views_functions'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - name: Filter migrations to 04_* (views/functions)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p /tmp/all
          shopt -s nullglob
          mv supabase/migrations/*.sql /tmp/all/ || true
          cp /tmp/all/*-04_*.sql supabase/migrations/ || true
          echo "Files to apply:"; ls -1 supabase/migrations || true
      - name: Link project
        run: supabase link --project-ref "$SUPABASE_PROJECT_ID"
      - name: Apply 04 migrations
        shell: bash
        run: |
          set -euo pipefail
          supabase db push --project-ref "$SUPABASE_PROJECT_ID" > push-04.log 2>&1 || {
            echo "❌ 04 failed. Last 200 lines:"; tail -n 200 push-04.log || true; exit 1; }
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: logs-04-views-functions
          path: push-04.log

  phase_triggers_policies:
    name: 05 Triggers & Policies
    needs: [phase_views_functions]
    if: (github.event_name == 'push' && needs.phase_views_functions.result == 'success') || inputs.phase == 'all' || inputs.phase == 'triggers_policies'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: supabase/setup-cli@v1
        with:
          version: latest
      - name: Filter migrations to 05_* (triggers/policies)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p /tmp/all
          shopt -s nullglob
          mv supabase/migrations/*.sql /tmp/all/ || true
          cp /tmp/all/*-05_*.sql supabase/migrations/ || true
          echo "Files to apply:"; ls -1 supabase/migrations || true
      - name: Link project
        run: supabase link --project-ref "$SUPABASE_PROJECT_ID"
      - name: Apply 05 migrations
        shell: bash
        run: |
          set -euo pipefail
          supabase db push --project-ref "$SUPABASE_PROJECT_ID" > push-05.log 2>&1 || {
            echo "❌ 05 failed. Last 200 lines:"; tail -n 200 push-05.log || true; exit 1; }
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: logs-05-triggers-policies
          path: push-05.log
