name: Supabase Migration CI

on:
  push:
    branches: [main]
    paths:
      - 'supabase/migrations/**'
      - 'supabase/config.toml'
  pull_request:
    branches: [main]
    paths:
      - 'supabase/migrations/**'
      - 'supabase/config.toml'
  workflow_dispatch:

concurrency:
  group: supabase-migrations-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Safe, no-secrets validation for PRs
  validate-migrations:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Validate migration files (basic)
        run: |
          echo "üîç Validating migration files..."
          set -euo pipefail
          files=$(find supabase/migrations -name "*.sql" -type f || true)
          if [ -z "$files" ]; then
            echo "‚ùå No migration files found"
            exit 1
          fi
          echo "$files" | sed 's/^/ - /'
          # very basic sanity check (no DB access)
          for f in $files; do
            if ! grep -q ";" "$f"; then
              echo "‚ö†Ô∏è  $f may not contain complete SQL statements"
            fi
          done
          echo "‚úÖ Migration validation completed"

  # Real migrations only on push to main or manual dispatch
  migrate:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      # Required secrets:
      # - SUPABASE_ACCESS_TOKEN (Account -> Access Tokens)
      # - SUPABASE_PROJECT_REF (project ref like abcdefghijklmno)
      SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      SUPABASE_PROJECT_REF: ${{ secrets.SUPABASE_PROJECT_REF }}
      # Keep the CLI quiet to avoid wire-protocol spam
      DEBUG: ""
      SUPABASE_DB_DEBUG: "0"
      SUPABASE_LOG_LEVEL: "warn"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Link to Supabase project
        run: supabase link --project-ref "$SUPABASE_PROJECT_REF"

      - name: Apply migrations (quiet + artifact)
        shell: bash
        run: |
          set -euo pipefail
          echo "::group::supabase db push"
          # Run quietly; on failure, show the last part for quick diagnosis
          supabase db push > push.log 2>&1 || {
            echo "‚ùå Migration failed. Last 200 lines:"
            tail -n 200 push.log || true
            echo "::endgroup::"
            exit 1
          }
          echo "‚úÖ Migrations applied successfully."
          echo "::endgroup::"

      - name: Verify migration status
        run: supabase migration list

      - name: Upload full logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: supabase-push-logs
          path: push.log
